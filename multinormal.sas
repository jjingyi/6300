*****CHECK MULTRIVARIATE NORMALITY ASSUMPTION;
** MULTIVARIATE FOR Y1, Y2, Y3,Y4;
proc import datafile= "C:\Users\Jing-Yi\Desktop\6300\Project\IRIS1.csv"
out=IRIS1 
dbms=csv
replace; 
getnames=yes; 
run;
*for y1;
Data Z1; SET IRIS1;
KEEP Y11 Y12 Y13;
PROC PRINT DATA=Z1;
RUN;


PROC IML;
 USE Z1;
 READ ALL INTO Y;
 N=NROW(Y);           *FINDS NUMBER OF OBSERVATIONS;
 YBAR=1/N*Y`*J(N,1);   *COMPUTES YBAR VECTOR;
 S=1/(N-1)*Y`*(I(N)-1/N*J(N))*Y; *COMPUTES VAR-COV MATRIX OF Y;
 SINV=INV(S);       *COMPUTES INVERSE OF S;
 YB=YBAR*J(1,N,1);  *COMPUTES MATRIX WITH P ROWS AND N COLUMNS -
                     ALL ELEMENTS IN Ith ROW ARE YBARS OF ITH VARIABLE;
 YD=Y-YB`;   *SUBTRACTS YBAR OF VARIABLE FROM EACH OBSERVED VALUE OF 
              VARIABLE - NxP;
 DSQ=YD*SINV*YD`;  *DIAGONAL ELEMENTS ARE STANDARDIZED SQUARED DISTANCE FROM Ith
                    Y VECTOR TO YBAR VECTOR - NxN; 
 D=DIAG(DSQ);  *CREATES NxN DIAGONAL MATRIX WITH Di-SQ'S ON DIAGONALS;  
 D2=D*J(N,1,1); *CREATES Nx1 VECTOR WITH THE Di-SQ'S;
 CREATE SGD FROM D2[COLNAME='D2']; *Creates data set SGD from the vector D2 to import back
                                     to regular SAS;  
APPEND FROM D2; 
print D2;

DATA SGD; SET SGD;
PROC SORT; BY D2;

PROC PRINT DATA=SGD2;

DATA SGD; SET SGD;
 N=50; P=3;
 U=N*D2/(N-1)**2;
 A=P/2;
 B=(N-P-1)/2;
 ALPHA=(P-2)/(2*P);
 BETA=(N-P-3)/(2*(N-P-1));
 PR=(_N_-ALPHA)/(N-ALPHA-BETA+1);
 V=BETAINV(PR,A,B); 
 UU=V; 

PROC PRINT DATA=SGD;
 VAR U V ;
RUN;

PROC GPLOT DATA=SGD;
  PLOT U*V=1;
 SYMBOL1 C=RED V=STAR I=RL;
PROC CORR DATA=SGD;;
 VAR U V;
RUN;

*FOR Y2;
Data Z2; SET IRIS1;
KEEP Y21 Y22 Y23;
PROC PRINT DATA=Z1;
RUN;


PROC IML;
 USE Z2;
 READ ALL INTO Y;
 N=NROW(Y);           *FINDS NUMBER OF OBSERVATIONS;
 YBAR=1/N*Y`*J(N,1);   *COMPUTES YBAR VECTOR;
 S=1/(N-1)*Y`*(I(N)-1/N*J(N))*Y; *COMPUTES VAR-COV MATRIX OF Y;
 SINV=INV(S);       *COMPUTES INVERSE OF S;
 YB=YBAR*J(1,N,1);  *COMPUTES MATRIX WITH P ROWS AND N COLUMNS -
                     ALL ELEMENTS IN Ith ROW ARE YBARS OF ITH VARIABLE;
 YD=Y-YB`;   *SUBTRACTS YBAR OF VARIABLE FROM EACH OBSERVED VALUE OF 
              VARIABLE - NxP;
 DSQ=YD*SINV*YD`;  *DIAGONAL ELEMENTS ARE STANDARDIZED SQUARED DISTANCE FROM Ith
                    Y VECTOR TO YBAR VECTOR - NxN; 
 D=DIAG(DSQ);  *CREATES NxN DIAGONAL MATRIX WITH Di-SQ'S ON DIAGONALS;  
 D2=D*J(N,1,1); *CREATES Nx1 VECTOR WITH THE Di-SQ'S;
 CREATE SGD FROM D2[COLNAME='D2']; *Creates data set SGD from the vector D2 to import back
                                     to regular SAS;  
APPEND FROM D2; 
print D2;

DATA SGD; SET SGD;
PROC SORT; BY D2;

PROC PRINT DATA=SGD2;

DATA SGD; SET SGD;
 N=50; P=3;
 U=N*D2/(N-1)**2;
 A=P/2;
 B=(N-P-1)/2;
 ALPHA=(P-2)/(2*P);
 BETA=(N-P-3)/(2*(N-P-1));
 PR=(_N_-ALPHA)/(N-ALPHA-BETA+1);
 V=BETAINV(PR,A,B); 
 UU=V; 

PROC PRINT DATA=SGD;
 VAR U V ;
RUN;

PROC GPLOT DATA=SGD;
  PLOT U*V=1;
 SYMBOL1 C=RED V=STAR I=RL;
PROC CORR DATA=SGD;;
 VAR U V;
RUN;
*FOR Y3;

Data Z3; SET IRIS1;
KEEP Y31 Y32 Y33;
PROC PRINT DATA=Z3;
RUN;


PROC IML;
 USE Z3;
 READ ALL INTO Y;
 N=NROW(Y);           *FINDS NUMBER OF OBSERVATIONS;
 YBAR=1/N*Y`*J(N,1);   *COMPUTES YBAR VECTOR;
 S=1/(N-1)*Y`*(I(N)-1/N*J(N))*Y; *COMPUTES VAR-COV MATRIX OF Y;
 SINV=INV(S);       *COMPUTES INVERSE OF S;
 YB=YBAR*J(1,N,1);  *COMPUTES MATRIX WITH P ROWS AND N COLUMNS -
                     ALL ELEMENTS IN Ith ROW ARE YBARS OF ITH VARIABLE;
 YD=Y-YB`;   *SUBTRACTS YBAR OF VARIABLE FROM EACH OBSERVED VALUE OF 
              VARIABLE - NxP;
 DSQ=YD*SINV*YD`;  *DIAGONAL ELEMENTS ARE STANDARDIZED SQUARED DISTANCE FROM Ith
                    Y VECTOR TO YBAR VECTOR - NxN; 
 D=DIAG(DSQ);  *CREATES NxN DIAGONAL MATRIX WITH Di-SQ'S ON DIAGONALS;  
 D2=D*J(N,1,1); *CREATES Nx1 VECTOR WITH THE Di-SQ'S;
 CREATE SGD FROM D2[COLNAME='D2']; *Creates data set SGD from the vector D2 to import back
                                     to regular SAS;  
APPEND FROM D2; 
print D2;

DATA SGD; SET SGD;
PROC SORT; BY D2;

PROC PRINT DATA=SGD2;

DATA SGD; SET SGD;
 N=50; P=3;
 U=N*D2/(N-1)**2;
 A=P/2;
 B=(N-P-1)/2;
 ALPHA=(P-2)/(2*P);
 BETA=(N-P-3)/(2*(N-P-1));
 PR=(_N_-ALPHA)/(N-ALPHA-BETA+1);
 V=BETAINV(PR,A,B); 
 UU=V; 

PROC PRINT DATA=SGD;
 VAR U V ;
RUN;

PROC GPLOT DATA=SGD;
  PLOT U*V=1;
 SYMBOL1 C=RED V=STAR I=RL;
PROC CORR DATA=SGD;;
 VAR U V;
RUN;

*FOR Y4;

Data Z4; SET IRIS1;
KEEP Y41 Y42 Y33;
PROC PRINT DATA=Z4;
RUN;


PROC IML;
 USE Z4;
 READ ALL INTO Y;
 N=NROW(Y);           *FINDS NUMBER OF OBSERVATIONS;
 YBAR=1/N*Y`*J(N,1);   *COMPUTES YBAR VECTOR;
 S=1/(N-1)*Y`*(I(N)-1/N*J(N))*Y; *COMPUTES VAR-COV MATRIX OF Y;
 SINV=INV(S);       *COMPUTES INVERSE OF S;
 YB=YBAR*J(1,N,1);  *COMPUTES MATRIX WITH P ROWS AND N COLUMNS -
                     ALL ELEMENTS IN Ith ROW ARE YBARS OF ITH VARIABLE;
 YD=Y-YB`;   *SUBTRACTS YBAR OF VARIABLE FROM EACH OBSERVED VALUE OF 
              VARIABLE - NxP;
 DSQ=YD*SINV*YD`;  *DIAGONAL ELEMENTS ARE STANDARDIZED SQUARED DISTANCE FROM Ith
                    Y VECTOR TO YBAR VECTOR - NxN; 
 D=DIAG(DSQ);  *CREATES NxN DIAGONAL MATRIX WITH Di-SQ'S ON DIAGONALS;  
 D2=D*J(N,1,1); *CREATES Nx1 VECTOR WITH THE Di-SQ'S;
 CREATE SGD FROM D2[COLNAME='D2']; *Creates data set SGD from the vector D2 to import back
                                     to regular SAS;  
APPEND FROM D2; 
print D2;

DATA SGD; SET SGD;
PROC SORT; BY D2;

PROC PRINT DATA=SGD2;

DATA SGD; SET SGD;
 N=50; P=3;
 U=N*D2/(N-1)**2;
 A=P/2;
 B=(N-P-1)/2;
 ALPHA=(P-2)/(2*P);
 BETA=(N-P-3)/(2*(N-P-1));
 PR=(_N_-ALPHA)/(N-ALPHA-BETA+1);
 V=BETAINV(PR,A,B); 
 UU=V; 

PROC PRINT DATA=SGD;
 VAR U V ;
RUN;

PROC GPLOT DATA=SGD;
  PLOT U*V=1;
 SYMBOL1 C=RED V=STAR I=RL;
PROC CORR DATA=SGD;;
 VAR U V;
RUN;   


PROC GLM DATA=AA; CLASS GRP;                                                          
  MODEL  =GRP;                                                  
  MANOVA H=_ALL_/MSTAT=EXACT;                                           
  ODS SELECT MULTSTAT; 
RUN; 
